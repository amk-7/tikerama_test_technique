{
    "openapi": "3.0.0",
    "info": {
        "title": "Api covid19 Documentation",
        "description": "Implementation of Swagger with in Laravel",
        "contact": {
            "email": "admin@admin.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get List Of Events",
                "description": "Returns a paginated list of events, ordered by date in descending order.",
                "operationId": "EventApiController.index",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to retrieve.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "The number of events per page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "category": {
                                                        "type": "string",
                                                        "example": "Formation"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "consequatur expedita totam"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Dolore atque consectetur ut numquam..."
                                                    },
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-08-12 23:52:26"
                                                    },
                                                    "image": {
                                                        "type": "string",
                                                        "format": "url",
                                                        "example": "https://via.placeholder.com/640x480.png/008822?text=events+Faker+ut"
                                                    },
                                                    "city": {
                                                        "type": "string",
                                                        "example": "West Weldonside"
                                                    },
                                                    "address": {
                                                        "type": "string",
                                                        "example": "522 Walsh Ramp Apt. 639\\nHumbertoport, IL 40577"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "upcoming"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "format": "url",
                                                    "example": "http://localhost:8000/api/events?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "url",
                                                    "example": "http://localhost:8000/api/events?page=50"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "format": "url",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "url",
                                                    "example": "http://localhost:8000/api/events?page=2"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "url": {
                                                                "type": "string",
                                                                "format": "url",
                                                                "example": null,
                                                                "nullable": true
                                                            },
                                                            "label": {
                                                                "type": "string",
                                                                "example": "&laquo; Previous"
                                                            },
                                                            "active": {
                                                                "type": "boolean",
                                                                "example": false
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "format": "url",
                                                    "example": "http://localhost:8000/api/events"
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 100
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No events found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events/upcoming": {
            "get": {
                "tags": [
                    "Upcoming Events"
                ],
                "summary": "Get List Of Upcoming Events",
                "description": "Returns a paginated list of events, ordered by date in descending order.",
                "operationId": "indexUpcoming",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to retrieve.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "The number of events per page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "category": {
                                                        "type": "string",
                                                        "example": "Formation"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "consequatur expedita totam"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Dolore atque consectetur ut numquam..."
                                                    },
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-08-12 23:52:26"
                                                    },
                                                    "image": {
                                                        "type": "string",
                                                        "format": "url",
                                                        "example": "https://via.placeholder.com/640x480.png/008822?text=events+Faker+ut"
                                                    },
                                                    "city": {
                                                        "type": "string",
                                                        "example": "West Weldonside"
                                                    },
                                                    "address": {
                                                        "type": "string",
                                                        "example": "522 Walsh Ramp Apt. 639\\nHumbertoport, IL 40577"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "upcoming"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "format": "url",
                                                    "example": "http://localhost:8000/api/events?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "format": "url",
                                                    "example": "http://localhost:8000/api/events?page=50"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "format": "url",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "format": "url",
                                                    "example": "http://localhost:8000/api/events?page=2"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "url": {
                                                                "type": "string",
                                                                "format": "url",
                                                                "example": null,
                                                                "nullable": true
                                                            },
                                                            "label": {
                                                                "type": "string",
                                                                "example": "&laquo; Previous"
                                                            },
                                                            "active": {
                                                                "type": "boolean",
                                                                "example": false
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "format": "url",
                                                    "example": "http://localhost:8000/api/events"
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 100
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No events found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get list of current user's orders",
                "operationId": "OrderApiController.index",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user's orders",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/orders/validate/{order_intent_id}/{event_id}": {
            "post": {
                "tags": [
                    "Validate an intent order"
                ],
                "summary": "Validate an intent order",
                "operationId": "OrderApiController.store",
                "parameters": [
                    {
                        "name": "order_intent_id",
                        "in": "path",
                        "description": "ID of the order intent",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "ID of the event",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order created successfully"
                                        },
                                        "tickets_url": {
                                            "type": "string",
                                            "example": "/storage/public/pdf/12345.pdf"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - Order intent or event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Exception occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/orders/intent": {
            "post": {
                "tags": [
                    "OrderIntents"
                ],
                "summary": "Create a new order intent",
                "operationId": "OrdersIntentApiController.store",
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Order intent created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order intent created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "price": {
                                                    "type": "integer",
                                                    "example": 1000
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "VIP"
                                                },
                                                "user_email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "user@example.com"
                                                },
                                                "user_phone": {
                                                    "type": "string",
                                                    "example": "1234567890"
                                                },
                                                "expiration_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-12-31"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-16T00:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-16T00:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Exception occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/events/ticket/types/{event_id}": {
            "get": {
                "tags": [
                    "TicketsType By Event"
                ],
                "summary": "Get List Of TicketsType By Event",
                "description": "Returns a paginated list of available tickets type by Event.",
                "operationId": "TicketsTypeApiController.index",
                "parameters": [
                    {
                        "name": "event_id",
                        "in": "path",
                        "description": "ID de l'événement",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of ticket types",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Event] 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/register": {
            "get": {
                "tags": [
                    "Registrate to api form"
                ],
                "summary": "Show registration page",
                "operationId": "1d061d86d669ff38983bf3a370d07c4b",
                "responses": {
                    "200": {
                        "description": "Registration page displayed",
                        "content": {
                            "text/html": {}
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Registrate to api"
                ],
                "summary": "Register a new user",
                "operationId": "625374163f6ec40e70b2f32f91b3e41d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "firstname",
                                    "lastname",
                                    "business",
                                    "town",
                                    "email",
                                    "address"
                                ],
                                "properties": {
                                    "firstname": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "lastname": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "business": {
                                        "type": "string",
                                        "example": "TechCorp"
                                    },
                                    "town": {
                                        "type": "string",
                                        "example": "Paris"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully registered and email sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Your account was successfully registered. Go to consult your email."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Login"
                ],
                "summary": "Login a user and return an API token",
                "operationId": "1dede7be3d10307b3791cbdd8137dbb3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "1|ABCDefGhijklmnopQrstuVwxyz1234567890"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid credentials or validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string",
                                                "example": "The provided credentials are incorrect."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Logout"
                ],
                "summary": "Logout the authenticated user",
                "operationId": "014f88e7622d5908c536589916f1b258",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Events",
            "description": "Events"
        },
        {
            "name": "Upcoming Events",
            "description": "Upcoming Events"
        },
        {
            "name": "Orders",
            "description": "Orders"
        },
        {
            "name": "Validate an intent order",
            "description": "Validate an intent order"
        },
        {
            "name": "OrderIntents",
            "description": "OrderIntents"
        },
        {
            "name": "TicketsType By Event",
            "description": "TicketsType By Event"
        },
        {
            "name": "Registrate to api form",
            "description": "Registrate to api form"
        },
        {
            "name": "Registrate to api",
            "description": "Registrate to api"
        },
        {
            "name": "Login",
            "description": "Login"
        },
        {
            "name": "Logout",
            "description": "Logout"
        }
    ]
}